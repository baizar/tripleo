# This template configures each role to use Vlans on a single nic for
# each isolated network.
# This template assumes use of network-isolation.yaml.
#
# FIXME: if/when we add functionality to heatclient to include heat
# environment files we should think about using it here to automatically
# include network-isolation.yaml.
resource_registry:
  OS::TripleO::Compute::Net::SoftwareConfig: ../network/config/compute.yaml
  OS::TripleO::Controller::Net::SoftwareConfig: ../network/config/controller.yaml
  OS::TripleO::CephStorage::Net::SoftwareConfig: ../network/config/ceph-storage.yaml
  OS::TripleO::SwiftStorage::Net::SoftwareConfig: ../network/config/swift-storage.yaml

parameter_defaults:
  InternalApiNetworkVlanID: 3223
  InternalApiNetCidr: 172.24.13.0/24
  InternalApiAllocationPools: [{'start': '172.24.13.7', 'end': '172.24.13.30'}]

  TenantNetworkVlanID: 3225
  TenantNetCidr: 172.16.3.0/24
  TenantAllocationPools: [{'start': '172.16.3.7', 'end': '172.16.3.30'}]

  StorageNetworkVlanID: 3224
  StorageNetCidr: 192.168.248.0/24
  StorageAllocationPools: [{'start': '192.168.248.7', 'end': '192.168.248.30'}]

  StorageMgmtNetworkVlanID: 3218
  StorageMgmtNetCidr: 192.168.245.0/24
  StorageMgmtAllocationPools: [{'start': '192.168.245.7', 'end': '192.168.245.30'}]

  ExternalNetworkVlanID: 3222
  ExternalNetCidr: 192.168.246.0/23
  # Leave room for floating IPs in the External allocation pool
  ExternalAllocationPools: [{'start': '192.168.246.7', 'end': '192.168.247.254'}]
  ExternalNetValueSpecs:
    'provider:physical_network': 'datacentre'
    'provider:network_type': 'vlan'
    'provider:segmentation_id': {get_param: ExternalNetworkVlanID}

  InternetNetworkVlanID: 3221
  InternetNetCidr: 81.45.17.0/25
  InternetAllocationPools: [{'start': '81.45.17.7', 'end': '81.45.17.127'}]
  InternetNetValueSpecs:
    'provider:physical_network': 'datacentre'
    'provider:network_type': 'vlan'
    'provider:segmentation_id': {get_param: InternetNetworkVlanID}

  InternodosNetworkVlanID: 3228
  InternodosNetCidr: 10.25.218.160/27
  InternodosAllocationPools: [{'start': '10.25.218.167', 'end': '10.25.218.190'}]
  InternodosNetValueSpecs:
    'provider:physical_network': 'datacentre'
    'provider:network_type': 'vlan'
    'provider:segmentation_id': {get_param: InternodosNetworkVlanID}

  BackendNetworkVlanID: 3712
  BackendNetCidr: 172.24.8.0/22
  BackendAllocationPools: [{'start': '172.24.8.7', 'end': '172.24.11.254'}]
  BackendNetValueSpecs:
    'provider:physical_network': 'datacentre'
    'provider:network_type': 'vlan'
    'provider:segmentation_id': {get_param: BackendNetworkVlanID}

  CorporateNetworkVlanID: 3274
  CorporateNetCidr: 10.95.175.0/24
  CorporateAllocationPools: [{'start': '10.95.175.7', 'end': '10.95.175.254'}]
  CorporateNetValueSpecs:
    'provider:physical_network': 'datacentre'
    'provider:network_type': 'vlan'
    'provider:segmentation_id': {get_param: CorporateNetworkVlanID}

  # Gateway router for the provisioning network (or Undercloud IP)
  ControlPlaneDefaultRoute: 172.24.12.1

  # The IP address of the EC2 metadata server. Generally the IP of the Undercloud
  EC2MetadataIp: 172.24.12.3

  # Define the DNS servers (maximum 2) for the overcloud nodes
  DnsServers: ["10.26.205.34", "10.26.205.35"]

  NeutronExternalNetworkBridge: "br-ex"

  # Customize bonding options if required
  CHANGEME!
  BondInterfaceOvsOptions: "bond_mode=balance-tcp lacp=active other-config:lacp-fallback-ab=true"

parameters:
  ServiceNetMap:
    NeutronTenantNetwork: tenant
    CeilometerApiNetwork: internal_api
    MongoDbNetwork: internal_api
    CinderApiNetwork: internal_api
    CinderIscsiNetwork: storage
    GlanceApiNetwork: storage
    GlanceRegistryNetwork: internal_api
    KeystoneAdminApiNetwork: internal_api
    KeystonePublicApiNetwork: internal_api
    NeutronApiNetwork: internal_api
    HeatApiNetwork: internal_api
    NovaApiNetwork: internal_api
    NovaMetadataNetwork: internal_api
    NovaVncProxyNetwork: internal_api
    SwiftMgmtNetwork: storage_mgmt
    SwiftProxyNetwork: storage
    HorizonNetwork: internal_api
    MemcachedNetwork: internal_api
    RabbitMqNetwork: internal_api
    RedisNetwork: internal_api
    MysqlNetwork: internal_api
    CephClusterNetwork: storage_mgmt
    CephPublicNetwork: storage
    # Define which network will be used for hostname resolution
    ControllerHostnameResolveNetwork: internal_api
    ComputeHostnameResolveNetwork: internal_api
    BlockStorageHostnameResolveNetwork: internal_api
    ObjectStorageHostnameResolveNetwork: internal_api
    CephStorageHostnameResolveNetwork: storage
